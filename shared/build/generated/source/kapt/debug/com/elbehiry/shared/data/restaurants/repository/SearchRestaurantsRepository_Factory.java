// Generated by Dagger (https://dagger.dev).
package com.elbehiry.shared.data.restaurants.repository;

import com.elbehiry.shared.data.restaurants.remote.ISearchRestaurantsDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SearchRestaurantsRepository_Factory implements Factory<SearchRestaurantsRepository> {
  private final Provider<ISearchRestaurantsDataSource> restaurantsSearchDataSourceProvider;

  public SearchRestaurantsRepository_Factory(
      Provider<ISearchRestaurantsDataSource> restaurantsSearchDataSourceProvider) {
    this.restaurantsSearchDataSourceProvider = restaurantsSearchDataSourceProvider;
  }

  @Override
  public SearchRestaurantsRepository get() {
    return newInstance(restaurantsSearchDataSourceProvider.get());
  }

  public static SearchRestaurantsRepository_Factory create(
      Provider<ISearchRestaurantsDataSource> restaurantsSearchDataSourceProvider) {
    return new SearchRestaurantsRepository_Factory(restaurantsSearchDataSourceProvider);
  }

  public static SearchRestaurantsRepository newInstance(
      ISearchRestaurantsDataSource restaurantsSearchDataSource) {
    return new SearchRestaurantsRepository(restaurantsSearchDataSource);
  }
}
