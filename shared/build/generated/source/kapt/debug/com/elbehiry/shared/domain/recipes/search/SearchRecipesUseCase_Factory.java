// Generated by Dagger (https://dagger.dev).
package com.elbehiry.shared.domain.recipes.search;

import com.elbehiry.shared.data.recipes.search.repository.SearchRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SearchRecipesUseCase_Factory implements Factory<SearchRecipesUseCase> {
  private final Provider<SearchRepository> searchRepositoryProvider;

  public SearchRecipesUseCase_Factory(Provider<SearchRepository> searchRepositoryProvider) {
    this.searchRepositoryProvider = searchRepositoryProvider;
  }

  @Override
  public SearchRecipesUseCase get() {
    return newInstance(searchRepositoryProvider.get());
  }

  public static SearchRecipesUseCase_Factory create(
      Provider<SearchRepository> searchRepositoryProvider) {
    return new SearchRecipesUseCase_Factory(searchRepositoryProvider);
  }

  public static SearchRecipesUseCase newInstance(SearchRepository searchRepository) {
    return new SearchRecipesUseCase(searchRepository);
  }
}
