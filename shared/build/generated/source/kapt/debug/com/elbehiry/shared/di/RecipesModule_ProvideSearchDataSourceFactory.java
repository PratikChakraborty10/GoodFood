// Generated by Dagger (https://dagger.dev).
package com.elbehiry.shared.di;

import com.elbehiry.shared.data.recipes.search.remote.SearchDataSource;
import com.elbehiry.shared.data.remote.DelishApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RecipesModule_ProvideSearchDataSourceFactory implements Factory<SearchDataSource> {
  private final RecipesModule module;

  private final Provider<DelishApi> apiProvider;

  public RecipesModule_ProvideSearchDataSourceFactory(RecipesModule module,
      Provider<DelishApi> apiProvider) {
    this.module = module;
    this.apiProvider = apiProvider;
  }

  @Override
  public SearchDataSource get() {
    return provideSearchDataSource(module, apiProvider.get());
  }

  public static RecipesModule_ProvideSearchDataSourceFactory create(RecipesModule module,
      Provider<DelishApi> apiProvider) {
    return new RecipesModule_ProvideSearchDataSourceFactory(module, apiProvider);
  }

  public static SearchDataSource provideSearchDataSource(RecipesModule instance, DelishApi api) {
    return Preconditions.checkNotNullFromProvides(instance.provideSearchDataSource(api));
  }
}
