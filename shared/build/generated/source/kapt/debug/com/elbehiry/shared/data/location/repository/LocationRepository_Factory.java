// Generated by Dagger (https://dagger.dev).
package com.elbehiry.shared.data.location.repository;

import com.elbehiry.shared.data.location.remote.ILocationRemoteDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LocationRepository_Factory implements Factory<LocationRepository> {
  private final Provider<ILocationRemoteDataSource> remoteDataSourceProvider;

  public LocationRepository_Factory(Provider<ILocationRemoteDataSource> remoteDataSourceProvider) {
    this.remoteDataSourceProvider = remoteDataSourceProvider;
  }

  @Override
  public LocationRepository get() {
    return newInstance(remoteDataSourceProvider.get());
  }

  public static LocationRepository_Factory create(
      Provider<ILocationRemoteDataSource> remoteDataSourceProvider) {
    return new LocationRepository_Factory(remoteDataSourceProvider);
  }

  public static LocationRepository newInstance(ILocationRemoteDataSource remoteDataSource) {
    return new LocationRepository(remoteDataSource);
  }
}
