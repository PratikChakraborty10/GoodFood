// Generated by Dagger (https://dagger.dev).
package com.elbehiry.shared.domain.recipes.random;

import com.elbehiry.shared.data.recipes.random.repository.RandomRecipesRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetRandomRecipesUseCase_Factory implements Factory<GetRandomRecipesUseCase> {
  private final Provider<RandomRecipesRepository> randomRecipesRepositoryProvider;

  public GetRandomRecipesUseCase_Factory(
      Provider<RandomRecipesRepository> randomRecipesRepositoryProvider) {
    this.randomRecipesRepositoryProvider = randomRecipesRepositoryProvider;
  }

  @Override
  public GetRandomRecipesUseCase get() {
    return newInstance(randomRecipesRepositoryProvider.get());
  }

  public static GetRandomRecipesUseCase_Factory create(
      Provider<RandomRecipesRepository> randomRecipesRepositoryProvider) {
    return new GetRandomRecipesUseCase_Factory(randomRecipesRepositoryProvider);
  }

  public static GetRandomRecipesUseCase newInstance(
      RandomRecipesRepository randomRecipesRepository) {
    return new GetRandomRecipesUseCase(randomRecipesRepository);
  }
}
