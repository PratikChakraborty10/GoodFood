// Generated by Dagger (https://dagger.dev).
package com.elbehiry.shared.domain.recipes.ingredients;

import com.elbehiry.shared.data.recipes.ingredients.repository.IngredientsRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetIngredientsUseCase_Factory implements Factory<GetIngredientsUseCase> {
  private final Provider<IngredientsRepository> ingredientsRepositoryProvider;

  public GetIngredientsUseCase_Factory(
      Provider<IngredientsRepository> ingredientsRepositoryProvider) {
    this.ingredientsRepositoryProvider = ingredientsRepositoryProvider;
  }

  @Override
  public GetIngredientsUseCase get() {
    return newInstance(ingredientsRepositoryProvider.get());
  }

  public static GetIngredientsUseCase_Factory create(
      Provider<IngredientsRepository> ingredientsRepositoryProvider) {
    return new GetIngredientsUseCase_Factory(ingredientsRepositoryProvider);
  }

  public static GetIngredientsUseCase newInstance(IngredientsRepository ingredientsRepository) {
    return new GetIngredientsUseCase(ingredientsRepository);
  }
}
