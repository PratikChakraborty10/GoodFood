// Generated by Dagger (https://dagger.dev).
package com.elbehiry.shared.di;

import com.google.android.gms.location.LocationRequest;
import com.google.android.gms.location.LocationSettingsRequest;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MapModule_ProvidesLocationSettingsRequest$shared_debugFactory implements Factory<LocationSettingsRequest> {
  private final MapModule module;

  private final Provider<LocationRequest> locationRequestProvider;

  public MapModule_ProvidesLocationSettingsRequest$shared_debugFactory(MapModule module,
      Provider<LocationRequest> locationRequestProvider) {
    this.module = module;
    this.locationRequestProvider = locationRequestProvider;
  }

  @Override
  public LocationSettingsRequest get() {
    return providesLocationSettingsRequest$shared_debug(module, locationRequestProvider.get());
  }

  public static MapModule_ProvidesLocationSettingsRequest$shared_debugFactory create(
      MapModule module, Provider<LocationRequest> locationRequestProvider) {
    return new MapModule_ProvidesLocationSettingsRequest$shared_debugFactory(module, locationRequestProvider);
  }

  public static LocationSettingsRequest providesLocationSettingsRequest$shared_debug(
      MapModule instance, LocationRequest locationRequest) {
    return Preconditions.checkNotNullFromProvides(instance.providesLocationSettingsRequest$shared_debug(locationRequest));
  }
}
