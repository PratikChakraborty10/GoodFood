// Generated by Dagger (https://dagger.dev).
package com.elbehiry.shared.data.db.di;

import com.elbehiry.shared.data.db.JsonConverter;
import com.squareup.moshi.Moshi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideJsonConverterFactory implements Factory<JsonConverter> {
  private final Provider<Moshi> moshiProvider;

  public DatabaseModule_ProvideJsonConverterFactory(Provider<Moshi> moshiProvider) {
    this.moshiProvider = moshiProvider;
  }

  @Override
  public JsonConverter get() {
    return provideJsonConverter(moshiProvider.get());
  }

  public static DatabaseModule_ProvideJsonConverterFactory create(Provider<Moshi> moshiProvider) {
    return new DatabaseModule_ProvideJsonConverterFactory(moshiProvider);
  }

  public static JsonConverter provideJsonConverter(Moshi moshi) {
    return Preconditions.checkNotNullFromProvides(DatabaseModule.INSTANCE.provideJsonConverter(moshi));
  }
}
