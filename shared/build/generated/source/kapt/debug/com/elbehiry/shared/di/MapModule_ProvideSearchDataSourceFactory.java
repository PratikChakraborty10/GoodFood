// Generated by Dagger (https://dagger.dev).
package com.elbehiry.shared.di;

import com.elbehiry.shared.data.remote.DelishApi;
import com.elbehiry.shared.data.restaurants.remote.ISearchRestaurantsDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MapModule_ProvideSearchDataSourceFactory implements Factory<ISearchRestaurantsDataSource> {
  private final MapModule module;

  private final Provider<DelishApi> apiProvider;

  public MapModule_ProvideSearchDataSourceFactory(MapModule module,
      Provider<DelishApi> apiProvider) {
    this.module = module;
    this.apiProvider = apiProvider;
  }

  @Override
  public ISearchRestaurantsDataSource get() {
    return provideSearchDataSource(module, apiProvider.get());
  }

  public static MapModule_ProvideSearchDataSourceFactory create(MapModule module,
      Provider<DelishApi> apiProvider) {
    return new MapModule_ProvideSearchDataSourceFactory(module, apiProvider);
  }

  public static ISearchRestaurantsDataSource provideSearchDataSource(MapModule instance,
      DelishApi api) {
    return Preconditions.checkNotNullFromProvides(instance.provideSearchDataSource(api));
  }
}
