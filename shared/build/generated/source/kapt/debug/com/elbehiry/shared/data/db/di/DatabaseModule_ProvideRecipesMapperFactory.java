// Generated by Dagger (https://dagger.dev).
package com.elbehiry.shared.data.db.di;

import com.elbehiry.shared.data.db.JsonConverter;
import com.elbehiry.shared.data.db.recipes.mapper.RecipeMapper;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideRecipesMapperFactory implements Factory<RecipeMapper> {
  private final Provider<JsonConverter> jsonConverterProvider;

  public DatabaseModule_ProvideRecipesMapperFactory(Provider<JsonConverter> jsonConverterProvider) {
    this.jsonConverterProvider = jsonConverterProvider;
  }

  @Override
  public RecipeMapper get() {
    return provideRecipesMapper(jsonConverterProvider.get());
  }

  public static DatabaseModule_ProvideRecipesMapperFactory create(
      Provider<JsonConverter> jsonConverterProvider) {
    return new DatabaseModule_ProvideRecipesMapperFactory(jsonConverterProvider);
  }

  public static RecipeMapper provideRecipesMapper(JsonConverter jsonConverter) {
    return Preconditions.checkNotNullFromProvides(DatabaseModule.INSTANCE.provideRecipesMapper(jsonConverter));
  }
}
