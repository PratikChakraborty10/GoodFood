// Generated by Dagger (https://dagger.dev).
package com.elbehiry.shared.domain.recipes.cuisines;

import com.elbehiry.shared.data.recipes.cuisines.repository.CuisinesRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetAvailableCuisinesUseCase_Factory implements Factory<GetAvailableCuisinesUseCase> {
  private final Provider<CuisinesRepository> cuisinesRepositoryProvider;

  public GetAvailableCuisinesUseCase_Factory(
      Provider<CuisinesRepository> cuisinesRepositoryProvider) {
    this.cuisinesRepositoryProvider = cuisinesRepositoryProvider;
  }

  @Override
  public GetAvailableCuisinesUseCase get() {
    return newInstance(cuisinesRepositoryProvider.get());
  }

  public static GetAvailableCuisinesUseCase_Factory create(
      Provider<CuisinesRepository> cuisinesRepositoryProvider) {
    return new GetAvailableCuisinesUseCase_Factory(cuisinesRepositoryProvider);
  }

  public static GetAvailableCuisinesUseCase newInstance(CuisinesRepository cuisinesRepository) {
    return new GetAvailableCuisinesUseCase(cuisinesRepository);
  }
}
