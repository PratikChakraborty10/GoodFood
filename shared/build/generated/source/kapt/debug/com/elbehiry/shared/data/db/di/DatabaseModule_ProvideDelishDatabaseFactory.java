// Generated by Dagger (https://dagger.dev).
package com.elbehiry.shared.data.db.di;

import android.content.Context;
import com.elbehiry.shared.data.db.DelishDataBase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideDelishDatabaseFactory implements Factory<DelishDataBase> {
  private final Provider<Context> contextProvider;

  public DatabaseModule_ProvideDelishDatabaseFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public DelishDataBase get() {
    return provideDelishDatabase(contextProvider.get());
  }

  public static DatabaseModule_ProvideDelishDatabaseFactory create(
      Provider<Context> contextProvider) {
    return new DatabaseModule_ProvideDelishDatabaseFactory(contextProvider);
  }

  public static DelishDataBase provideDelishDatabase(Context context) {
    return Preconditions.checkNotNullFromProvides(DatabaseModule.INSTANCE.provideDelishDatabase(context));
  }
}
