// Generated by Dagger (https://dagger.dev).
package com.elbehiry.delish.ui.map;

import androidx.lifecycle.SavedStateHandle;
import com.elbehiry.shared.domain.location.GetCurrentLocationUseCase;
import com.elbehiry.shared.domain.restaurants.CreateFoursquareVersionUseCase;
import com.elbehiry.shared.domain.restaurants.SearchRestaurantsUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MapViewModel_Factory implements Factory<MapViewModel> {
  private final Provider<SearchRestaurantsUseCase> searchRestaurantsUseCaseProvider;

  private final Provider<CreateFoursquareVersionUseCase> createFoursquareVersionUseCaseProvider;

  private final Provider<GetCurrentLocationUseCase> getCurrentLocationUseCaseProvider;

  private final Provider<SavedStateHandle> savedStateHandleProvider;

  public MapViewModel_Factory(Provider<SearchRestaurantsUseCase> searchRestaurantsUseCaseProvider,
      Provider<CreateFoursquareVersionUseCase> createFoursquareVersionUseCaseProvider,
      Provider<GetCurrentLocationUseCase> getCurrentLocationUseCaseProvider,
      Provider<SavedStateHandle> savedStateHandleProvider) {
    this.searchRestaurantsUseCaseProvider = searchRestaurantsUseCaseProvider;
    this.createFoursquareVersionUseCaseProvider = createFoursquareVersionUseCaseProvider;
    this.getCurrentLocationUseCaseProvider = getCurrentLocationUseCaseProvider;
    this.savedStateHandleProvider = savedStateHandleProvider;
  }

  @Override
  public MapViewModel get() {
    return newInstance(searchRestaurantsUseCaseProvider.get(), createFoursquareVersionUseCaseProvider.get(), getCurrentLocationUseCaseProvider.get(), savedStateHandleProvider.get());
  }

  public static MapViewModel_Factory create(
      Provider<SearchRestaurantsUseCase> searchRestaurantsUseCaseProvider,
      Provider<CreateFoursquareVersionUseCase> createFoursquareVersionUseCaseProvider,
      Provider<GetCurrentLocationUseCase> getCurrentLocationUseCaseProvider,
      Provider<SavedStateHandle> savedStateHandleProvider) {
    return new MapViewModel_Factory(searchRestaurantsUseCaseProvider, createFoursquareVersionUseCaseProvider, getCurrentLocationUseCaseProvider, savedStateHandleProvider);
  }

  public static MapViewModel newInstance(SearchRestaurantsUseCase searchRestaurantsUseCase,
      CreateFoursquareVersionUseCase createFoursquareVersionUseCase,
      GetCurrentLocationUseCase getCurrentLocationUseCase, SavedStateHandle savedStateHandle) {
    return new MapViewModel(searchRestaurantsUseCase, createFoursquareVersionUseCase, getCurrentLocationUseCase, savedStateHandle);
  }
}
