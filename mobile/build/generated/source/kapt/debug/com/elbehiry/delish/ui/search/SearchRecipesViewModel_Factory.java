// Generated by Dagger (https://dagger.dev).
package com.elbehiry.delish.ui.search;

import com.elbehiry.shared.domain.recipes.search.SearchRecipesUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SearchRecipesViewModel_Factory implements Factory<SearchRecipesViewModel> {
  private final Provider<SearchRecipesUseCase> searchRecipesUseCaseProvider;

  public SearchRecipesViewModel_Factory(
      Provider<SearchRecipesUseCase> searchRecipesUseCaseProvider) {
    this.searchRecipesUseCaseProvider = searchRecipesUseCaseProvider;
  }

  @Override
  public SearchRecipesViewModel get() {
    return newInstance(searchRecipesUseCaseProvider.get());
  }

  public static SearchRecipesViewModel_Factory create(
      Provider<SearchRecipesUseCase> searchRecipesUseCaseProvider) {
    return new SearchRecipesViewModel_Factory(searchRecipesUseCaseProvider);
  }

  public static SearchRecipesViewModel newInstance(SearchRecipesUseCase searchRecipesUseCase) {
    return new SearchRecipesViewModel(searchRecipesUseCase);
  }
}
