// Generated by Dagger (https://dagger.dev).
package com.elbehiry.delish.ui.plan;

import com.elbehiry.shared.domain.plan.GetMealPlanUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MealPlanViewModel_Factory implements Factory<MealPlanViewModel> {
  private final Provider<GetMealPlanUseCase> getMealPlanUseCaseProvider;

  public MealPlanViewModel_Factory(Provider<GetMealPlanUseCase> getMealPlanUseCaseProvider) {
    this.getMealPlanUseCaseProvider = getMealPlanUseCaseProvider;
  }

  @Override
  public MealPlanViewModel get() {
    return newInstance(getMealPlanUseCaseProvider.get());
  }

  public static MealPlanViewModel_Factory create(
      Provider<GetMealPlanUseCase> getMealPlanUseCaseProvider) {
    return new MealPlanViewModel_Factory(getMealPlanUseCaseProvider);
  }

  public static MealPlanViewModel newInstance(GetMealPlanUseCase getMealPlanUseCase) {
    return new MealPlanViewModel(getMealPlanUseCase);
  }
}
